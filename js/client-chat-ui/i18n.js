var clientChatUiI18n = function () {

    var definition = widgetConfiguration.getDefinition();
    var chatWidgetStyling = definition ? definition.chatWidgetStyling : null;
    var defaultWidgetStyling = {
        inactivityTimeoutMessage: "Your session has expired due to inactivity.",
        inactivityWarningMessage: "We have not heard from you for some time. Please respond within the next few minutes to keep your chat session connected.",
        sessionEndedMessage: "Chat session has ended",
        networkConnectionErrorMessage: "Internet connection error",
        networkConnectionEstablishedMessage: "Internet connection established",
        agentJoinedMessage: "has joined the chat",
        agentLeftMessage: "has left the chat",
        imageWasSent: "has sent you an image",
        fileWasSent: "has sent you an attachment",
        refersToRequiredFields: "* Refers to Required Fields",
        requiredField: "Please fill",
        invalidInputField: 'Invalid input',
        file: 'File',
        isNotAvailable: 'is not available',
        notificationsPrompt: 'When prompted, please allow notifications from this window, so you could see responses when this window is hidden.',
        allowMicroPrompt: 'When prompted, please allow access to your microphone.',
        allowMicroVideoPrompt: 'When prompted, please allow access to your camera and microphone.',
        cobrowsingDialogText: 'By clicking Accept, an agent will join you on the page you are currently viewing. The agent can view and help you as you browse the web in this tab. The agent will not see login details, passwords, other browser tabs or programs you have opened. You can stop co-browsing at any time, by clicking X in the menu or by closing this tab in your browser.',
        cobrowsingDialogHeader: 'Start co-browsing',
        cobrowsingDialogAcceptLabel: 'Accept',
        cobrowsingDialogCancelLabel: 'Cancel',
        sessionCompletedWidgetTitle: 'Session completed',
        agentTypingIndicator: '$(name) is typing',
        replyFromMessageText: 'Reply from',
        justNowMessageArrivalTimeIndicator: 'just now',
        minutesAgoMessageArrivalTimeIndicator: 'm ago',
        hoursAgoMessageArrivalTimeIndicator: 'h ago',
        daysAgoMessageArrivalTimeIndicator: 'd ago',
        someTimeAgoMessageArrivalTimeIndicator: 'Some time ago',
        hintMessageTextBox: 'Text...',
        showChatTooltip: 'Show chat',
        endChatTooltip: 'End chat',
        minimizeChatTooltip: 'Minimize chat',
        shareScreenTooltip: 'Share screen',
        webRtcCallTooltip: 'Call me',
        webRtcSwitchVideoTooltip: 'Switch video',
        webRtcEndCallTooltip: 'End call',
        emojiTooltip: 'Emoji',
        sendFileTooltip: 'Send file',
        minimizedDismissMessagesTooltip: 'Dismiss',
        screenSharingRequestedMessageText: 'Screen sharing request sent',
        screenSharingEndedMessageText: 'Screen sharing session ended',
        clickToStartCobrowsingPrompt: 'Click to start co-browsing session',
        cobrowsingRequestedMessageText: 'Co-browsing session requested',
        cobrowsingRejectedMessageText: 'Co-browsing session rejected',
        cobrowsingStartedMessageText: 'Co-browsing session started',
        cobrowsingEndedMessageText: 'Co-browsing session ended',
        cameraNotDetectedText: 'Web camera not detected',
        microNotDetectedText: 'Microphone not detected',
        surveyFormTitle: 'Please leave us feedback',
        surveyFormWasIssueResolvedQuestion: 'Did we provide the service you were looking for?',
        surveyFormWasIssueResolvedPositiveAnswer: 'yes',
        surveyFormWasIssueResolvedNegativeAnswer: 'no',
        surveyFormContactSatisfactionQuestion: 'How helpful was our representative?',
        surveyFormNetPromoterScoreQuestion: 'How likely are you to recommend our products and services in the future?',
        surveyFormSendChatTranscriptQuestion: 'Send me transcript of the chat by email?',
        surveyFormEmailFieldLabel: 'Your email*',
        surveyFormEmailValidationErrorText: 'Wrong value'
    };

    function getTranslation(propName) {
        if (chatWidgetStyling && commonUtilService.isDefined(chatWidgetStyling[propName])) {
            return chatWidgetStyling[propName];
        }
        return defaultWidgetStyling[propName];
    }

    return {
        inactivityTimeoutMessage: getTranslation('inactivityTimeoutMessage'),
        inactivityWarningMessage: getTranslation('inactivityWarningMessage'),
        sessionEndedMessage: getTranslation('sessionEndedMessage'),
        networkConnectionErrorMessage: getTranslation('networkConnectionErrorMessage'),
        networkConnectionEstablishedMessage: getTranslation('networkConnectionEstablishedMessage'),
        agentJoinedMessage: getTranslation('agentJoinedMessage'),
        agentLeftMessage: getTranslation('agentLeftMessage'),
        refersToRequiredFields: getTranslation('refersToRequiredFields'),
        requiredField: getTranslation('requiredField'),
        imageWasSent: getTranslation('imageWasSent'),
        fileWasSent: getTranslation('fileWasSent'),
        invalidInputField: getTranslation('invalidInputField'),
        file: getTranslation('file'),
        isNotAvailable: getTranslation('isNotAvailable'),
        notificationsPrompt: getTranslation('notificationsPrompt'),
        allowMicroPrompt: getTranslation('allowMicroPrompt'),
        allowMicroVideoPrompt: getTranslation('allowMicroVideoPrompt'),
        cobrowsingDialogText: getTranslation('cobrowsingDialogText'),
        cobrowsingDialogHeader: getTranslation('cobrowsingDialogHeader'),
        cobrowsingDialogAcceptLabel: getTranslation('cobrowsingDialogAcceptLabel'),
        cobrowsingDialogCancelLabel: getTranslation('cobrowsingDialogCancelLabel'),
        sessionCompletedWidgetTitle: getTranslation('sessionCompletedWidgetTitle'),
        agentTypingIndicator: getTranslation('agentTypingIndicator'),
        replyFromMessageText: getTranslation('replyFromMessageText'),
        justNowMessageArrivalTimeIndicator: getTranslation('justNowMessageArrivalTimeIndicator'),
        minutesAgoMessageArrivalTimeIndicator: getTranslation('minutesAgoMessageArrivalTimeIndicator'),
        hoursAgoMessageArrivalTimeIndicator: getTranslation('hoursAgoMessageArrivalTimeIndicator'),
        daysAgoMessageArrivalTimeIndicator: getTranslation('daysAgoMessageArrivalTimeIndicator'),
        someTimeAgoMessageArrivalTimeIndicator: getTranslation('someTimeAgoMessageArrivalTimeIndicator'),
        hintMessageTextBox: getTranslation('hintMessageTextBox'),
        showChatTooltip: getTranslation('showChatTooltip'),
        endChatTooltip: getTranslation('endChatTooltip'),
        minimizeChatTooltip: getTranslation('minimizeChatTooltip'),
        shareScreenTooltip: getTranslation('shareScreenTooltip'),
        webRtcCallTooltip: getTranslation('webRtcCallTooltip'),
        webRtcSwitchVideoTooltip: getTranslation('webRtcSwitchVideoTooltip'),
        webRtcEndCallTooltip: getTranslation('webRtcEndCallTooltip'),
        emojiTooltip: getTranslation('emojiTooltip'),
        sendFileTooltip: getTranslation('sendFileTooltip'),
        minimizedDismissMessagesTooltip: getTranslation('minimizedDismissMessagesTooltip'),
        screenSharingRequestedMessageText: getTranslation('screenSharingRequestedMessageText'),
        screenSharingEndedMessageText: getTranslation('screenSharingEndedMessageText'),
        clickToStartCobrowsingPrompt: getTranslation('clickToStartCobrowsingPrompt'),
        cobrowsingRequestedMessageText: getTranslation('cobrowsingRequestedMessageText'),
        cobrowsingRejectedMessageText: getTranslation('cobrowsingRejectedMessageText'),
        cobrowsingStartedMessageText: getTranslation('cobrowsingStartedMessageText'),
        cobrowsingEndedMessageText: getTranslation('cobrowsingEndedMessageText'),
        cameraNotDetectedText: getTranslation('cameraNotDetectedText'),
        microNotDetectedText: getTranslation('microNotDetectedText'),
        surveyFormTitle: getTranslation('surveyFormTitle'),
        surveyFormWasIssueResolvedQuestion: getTranslation('surveyFormWasIssueResolvedQuestion'),
        surveyFormWasIssueResolvedPositiveAnswer: getTranslation('surveyFormWasIssueResolvedPositiveAnswer'),
        surveyFormWasIssueResolvedNegativeAnswer: getTranslation('surveyFormWasIssueResolvedNegativeAnswer'),
        surveyFormContactSatisfactionQuestion: getTranslation('surveyFormContactSatisfactionQuestion'),
        surveyFormNetPromoterScoreQuestion: getTranslation('surveyFormNetPromoterScoreQuestion'),
        surveyFormSendChatTranscriptQuestion: getTranslation('surveyFormSendChatTranscriptQuestion'),
        surveyFormEmailFieldLabel: getTranslation('surveyFormEmailFieldLabel'),
        surveyFormEmailValidationErrorText: getTranslation('surveyFormEmailValidationErrorText')
    }
};
